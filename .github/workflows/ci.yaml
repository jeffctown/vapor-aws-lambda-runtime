name: CI
on: 
  push:
    branches: 
    - main
  pull_request:
    branches: 
    - "*"

jobs:

  "sanity-Tests":
    runs-on: macOS-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install swiftformat
      run: brew install swiftformat
    - name: Run sanity
      run: ./scripts/sanity.sh .

  "tuxOS-Tests":
    runs-on: ubuntu-latest
    strategy:
      matrix:
        images:
        - swift:5.2
        - swift:5.2-amazonlinux2
    container:
      image: ${{ matrix.images }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install dependencies 
      if: contains(matrix.images, 'amazonlinux2') == false
      run: apt-get update && apt-get install -y curl # required by the codecov action.
    - name: Test
      run: swift test --enable-code-coverage --enable-test-discovery
    - name: Convert coverage files
      run: llvm-cov export -format="lcov" .build/debug/vapor-aws-lambda-runtimePackageTests.xctest -instr-profile .build/debug/codecov/default.profdata > info.lcov
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v1
      with:
        file: info.lcov

  "example-Build":
    runs-on: ubuntu-latest
    strategy:
      matrix:
        examples:
        - Hello
    container:
      image: swift:5.2-amazonlinux2
    defaults:
      run:
        working-directory: examples/${{ matrix.examples }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install dependencies
      run: yum -y install openssl-devel
    - name: Build
      run: swift build -c release

  "macOS-Tests":
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      matrix:
        xcodes:
        - 11.5
        - 12
        - 12.1
        - 12.2
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Show all Xcode versions
      run: ls -an /Applications/ | grep Xcode*
    - name: Change Xcode command line tools
      run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcodes }}.app/Contents/Developer
    - name: Xcode Tests
      run: |
        swift package generate-xcodeproj
        xcodebuild -quiet -parallel-testing-enabled YES -scheme vapor-aws-lambda-runtime-Package -enableCodeCoverage YES build test
    # - name: Codecov
    #   run: bash <(curl -s https://codecov.io/bash) -t ${{secrets.CODECOV_TOKEN}}
